---
import { db, Comment } from 'astro:db';
import Layout from '../layouts/Layout.astro';
import Badge from '../components/Badge.astro';

if (Astro.request.method === 'POST') {
	debugger;
  // parse form data
  const formData = await Astro.request.formData();
  const author = formData.get('author');
  const content = formData.get('content');
  if (typeof author === 'string' && typeof content === 'string') {
    // insert form data into the Comment table
    await db.insert(Comment).values({ author, content } as any);
  }
}


const comments = await db.select().from(Comment);
---

<Layout title="Welcome to Astro.">
	<main>
		<h1 class="text tex-white text-5xl flex flex-row gap-x-4 pb-4 mb-0">
			Hola, soy Joel 
			<div class="flex justify-center items-center">
				<Badge>Disponible para trabajar</Badge>
			</div>
		</h1>
		<h2>
			Un desarrollador web con más de 10 años de experiencia. Me especializo en el desarrollo de aplicaciones web y móviles, y tengo experiencia en una amplia variedad de tecnologías y lenguajes de programación. Si estás buscando un desarrollador web con experiencia y habilidades técnicas sólidas, ¡has venido al lugar correcto!
		</h2>
		<h2>Comments</h2>

			{
			comments.map(({ author, body }) => (
				<article>
				<p>Author: {author}</p>
				<p>{body}</p>
				</article>
			))
			}
		<form method="POST" style="display: grid">
			<label for="author">Author</label>
			<input id="author" name="author" />
		  
			<label for="content">Body</label>
			<textarea id="body" name="body"></textarea>
		  
			<button type="submit">Submit</button>
		  </form>	
		
	</main>

</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
